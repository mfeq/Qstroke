.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.48.5.
.TH MFEKstroke "1" "November 2021" "MFEKstroke git-rev-3a65ce1" "User Commands"
.SH NAME
MFEKstroke \- manual page for MFEKstroke git-rev-3a65ce1
.SH DESCRIPTION
MFEKstroke
.PP
Matthew Blanchard <matthewrblanchard@gmail.com>; Fredrick R. Brennan <copypaste???kittens???ph>; MFEK
Authors
.PP
A utility for applying stroking techniques to contours (in UFO .glif format).
.SH "USAGE"
.IP
MFEKstroke <SUBCOMMAND>
.SH "OPTIONS"
.TP
\fB\-h\fR, \fB\-\-help\fR
Print help information
.SH "SUBCOMMANDS"
.TP
CWS
Takes a .glif file and strokes it at a constant width.
.TP
DASH
Applies a dash to a glyph.
.TP
NIB
Takes a nib and a path, both in .glif format, and emulates a pen, with the chosen
nib, stroking the path.
.IP
Important note: FontForge is used for this, so it may be more unstable than other
modes as FontForge is implemented in C and not memory safe. To prevent bugs, we turn
off simplification and overlap removal. Use MFEK for that.
.TP
PAP
Maps a pattern glyph along a path glyph.
.TP
VWS
Takes a .glif file and strokes it with variable width.
.SS MFEKstroke-CWS
MFEKstroke\-CWS 0.1
.PP
Fredrick R. Brennan <copypaste???kittens???ph>; Matthew Blanchard <matthewrblanchard@gmail.com>
.PP
Takes a .glif file and strokes it at a constant width.
.SS "USAGE"
.IP
MFEKstroke CWS [OPTIONS] \fB\-\-input\fR <input> \fB\-\-output\fR <output>
.SS "OPTIONS"
.TP
\fB\-s\fR, \fB\-\-startcap\fR <startcap>
Either the constant strings "circle", "round" or "square", or a
\&.glif file. [default: circle]
.TP
\fB\-e\fR, \fB\-\-endcap\fR <endcap>
Either the constant strings "circle", "round" or "square", or a
\&.glif file. [default: circle]
.TP
\fB\-i\fR, \fB\-\-input\fR <input>
The path to the input file.
.TP
\fB\-j\fR, \fB\-\-jointype\fR <jointype>
How to join discontinuous splines [default: round] [possible
values: round, circle, miter, bevel]
.TP
\fB\-o\fR, \fB\-\-output\fR <output>
The path where the output will be saved.
.TP
\fB\-w\fR, \fB\-\-width\fR <width>
<f64> Constant stroke width.
.TP
\fB\-l\fR, \fB\-\-left\fR <left>
<f64> Constant stroke width (left).
.TP
\fB\-r\fR, \fB\-\-right\fR <right>
<f64> Constant stroke width (right).
.TP
\fB\-I\fR, \fB\-\-remove\-internal\fR
Remove internal contour
.TP
\fB\-E\fR, \fB\-\-remove\-external\fR
Remove external contour
.TP
\fB\-S\fR, \fB\-\-segmentwise\fR
Join all segments with caps (stroke all B??zier segments one by one)
.TP
\fB\-h\fR, \fB\-\-help\fR
Print help information
.SS MFEKstroke-DASH
MFEKstroke\-DASH 0.1.0
.PP
Fredrick R. Brennan <copypaste???kittens.ph>; MFEK Authors; Skia/kurbo.rs authors
.PP
Applies a dash to a glyph.
.SS "USAGE"
.IP
MFEKstroke DASH [OPTIONS] \fB\-\-input\fR <input> \fB\-\-output\fR <output>
.SS "OPTIONS"
.TP
\fB\-i\fR, \fB\-\-input\fR <input>
The path to the input glif file.
.TP
\fB\-o\fR, \fB\-\-output\fR <output>
The path to the output glif file.
.TP
\fB\-d\fR, \fB\-\-dash\-description\fR <dash>...
Dash description [default: 30 30]
.TP
\fB\-c\fR, \fB\-\-cull\fR
Attempt to cull earlier dashes when later dashes cover them
.TP
\fB\-w\fR, \fB\-\-width\fR <width>
Stroke width (to leave an open contour, use 0) [default: 30]
.TP
\fB\-W\fR, \fB\-\-cull\-width\fR <cull\-width>
Cull width [default: 40]
.TP
\fB\-a\fR, \fB\-\-min\-area\fR <area>
Paths with either a height or width below this number are
culled. Do not set if unsure.
.TP
\fB\-l\fR, \fB\-\-write\-last\fR
Write last path
.TP
\fB\-j\fR, \fB\-\-join\fR <join\-type>
How to join discontinuous splines [default: round] [possible
values: round, miter, bevel]
.TP
\fB\-J\fR, \fB\-\-cap\fR <cap\-type>
How to cap splines [default: round] [possible values: round,
butt, square]
.TP
\fB\-h\fR, \fB\-\-help\fR
Print help information
.SS MFEKstroke-NIB
MFEKstroke\-NIB 0.1.0
.PP
Fredrick R. Brennan <copypaste???kittens???ph>; Skef Iterum (FontForge)
.PP
Takes a nib and a path, both in .glif format, and emulates a pen, with the chosen nib, stroking the
path.
.PP
Important note: FontForge is used for this, so it may be more unstable than other modes as FontForge
is implemented in C and not memory safe. To prevent bugs, we turn off simplification and overlap
removal. Use MFEK for that.
.SS "USAGE"
.IP
MFEKstroke NIB [OPTIONS] \fB\-\-nib\fR <nib> \fB\-\-input\fR <input> \fB\-\-output\fR <output>
.SS "OPTIONS"
.TP
\fB\-n\fR, \fB\-\-nib\fR <nib>
The path to the nib file. FontForge is quite strict about these.
The .glif must contain a single closed spline, running clockwise,
which represents a convex shape.
.TP
\fB\-i\fR, \fB\-\-input\fR <input>
The path to the input path file.
.TP
\fB\-o\fR, \fB\-\-output\fR <output>
The path where the output .glif will be saved.
.TP
\fB\-a\fR, \fB\-\-accuracy\fR <accuracy>
<f64> Accuracy target [default: 0.25]
.TP
\fB\-h\fR, \fB\-\-help\fR
Print help information
.SS MFEKstroke-PAP
MFEKstroke\-PAP 0.2.1
.PP
Matthew Blanchard <matthewrblanchard@gmail.com>; Fredrick R. Brennan <copypaste???kittens.ph>; MFEK
Authors
.PP
Maps a pattern glyph along a path glyph.
.SS "USAGE"
.IP
MFEKstroke PAP [OPTIONS] \fB\-\-path\fR <path>
.SS "OPTIONS"
.TP
\fB\-p\fR, \fB\-\-pattern\fR <pattern>
The path to the input pattern file. You may also provide
either \fB\-\-dot\-pattern\fR or \fB\-\-dash\-pattern\fR to use built\-in
patterns.
.TP
\fB\-=\fR, \fB\-\-dash\-pattern\fR
Use a simple dash pattern
.TP
\-., \fB\-\-dot\-pattern\fR
Use a simple dot pattern
.TP
\fB\-P\fR, \fB\-\-path\fR <path>
The path to the input path file.
.TP
\fB\-o\fR, \fB\-\-output\fR <output>
The path where the output will be saved. If omitted, or `\-`,
stdout.
.TP
\fB\-c\fR, \fB\-\-contour\fR <contour>
<isize> if this is a positive number we stroke only that
specific contour in the outline by index. [default: -1]
.TP
\fB\-m\fR, \fB\-\-mode\fR <mode>
Repeat mode. [default: single] [possible values: single,
repeated]
.TP
\fB\-s\fR, \fB\-\-subdivide\fR <subdivide>
<usize> how many times to subdivide the patterns at their
midpoint. [default: 0]
.TP
\fB\-X\fR, \fB\-\-sx\fR <sx>
<f64> how much we scale our input pattern on the x\-axis.
[default: 1]
.TP
\fB\-Y\fR, \fB\-\-sy\fR <sy>
<f64> how much we scale our input pattern on the y\-axis.
[default: 1]
.TP
\fB\-n\fR, \fB\-\-noffset\fR <normal\-offset>
<f64> how much to offset the pattern along the normal of the
path. [default: 0]
.TP
\fB\-t\fR, \fB\-\-toffset\fR <tangent\-offset>
<f64> how much to offset the pattern along the tangent of the
path. [default: 0]
.TP
\fB\-W\fR, \fB\-\-spacing\fR <spacing>
<f64> how much padding to trail each copy with. [default: 0]
.TP
\-!, \fB\-\-stretch\fR <stretch>
<stretch> false if not given, true if given, spacing mode if
value of spacing given [possible values: spacing]
.TP
\fB\-S\fR, \fB\-\-simplify\fR
<boolean> if we should run the result through Skia's (buggy)
simplify routine.
.TP
\fB\-O\fR, \fB\-\-overdraw\fR <overdraw>
<f64> pattern copies overlapping more than arg% are removed.
[default: 100%]
.TP
\fB\-Q\fR, \fB\-\-one\-pass\fR
<boolean> whether we should not reflow the path after culling
during overdraw (faster but worse).
.TP
\fB\-C\fR, \fB\-\-no\-center\-pattern\fR
<boolean> supply if you wish to center the pattern
.TP
\fB\-r\fR, \fB\-\-reverse\fR
<boolean> true will reverse the path.
.TP
\fB\-R\fR, \fB\-\-reverse\-culling\fR
<boolean> true will reverse the order we check for overlaps
during overlap culling.
.TP
\fB\-h\fR, \fB\-\-help\fR
Print help information
.SS MFEKstroke-VWS
MFEKstroke\-VWS 0.1
.PP
Matthew Blanchard <matthewrblanchard@gmail.com>
.PP
Takes a .glif file and strokes it with variable width.
.SS "USAGE"
.IP
MFEKstroke VWS \fB\-i\fR <input> \fB\-o\fR <output>
.SS "OPTIONS"
.TP
\fB\-h\fR, \fB\-\-help\fR
Print help information
.TP
\fB\-i\fR <input>
The path to the input file.
.TP
\fB\-o\fR <output>
The path where the output will be saved.
.TP
\fB\-V\fR, \fB\-\-version\fR
